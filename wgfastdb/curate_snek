import glob
import os


PARAMS = config['params']
SPECIES = list(PARAMS.keys())

def get_output(wildcards):
    paths = expand("genomes/{species}/qc/{u}-{c}-{a}-{d}/passed/",
        zip,
        species=SPECIES,
        u=[PARAMS[s]['unknowns'] for s in SPECIES],
        c=[PARAMS[s]['contigs'] for s in SPECIES],
        a=[PARAMS[s]['assembly_size'] for s in SPECIES],
        d=[PARAMS[s]['distance'] for s in SPECIES])
    all_paths = []
    for path in paths:
        all_paths += glob.glob(os.path.join(path, "*.fasta"))
    return all_paths

rule all:
    input: get_output

rule curate:
    input:
    output: 
        "genomes/{species}/qc/{u}-{c}-{a}-{d}/passed/{fastas}"
    threads: 8
    message: """
    Executing genbankqc with {threads} threads on {wildcards.species},
    Logging to logs/{wildcards.species}_curate.log"""
    shell:
        "genbankqc species genomes/{wildcards.species} -n {wildcards.u} "
        "-c {wildcards.c} -s {wildcards.a} -d {wildcards.d} "
        "--processes {threads} > logs/{wildcards.species}_curate.log 2>&1"
