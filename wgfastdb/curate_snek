import glob
import os


PARAMS = config['params']
SPECIES = list(PARAMS.keys())

def get_output(wildcards):
    return expand("genomes/{species}/qc/{u}-{c}-{a}-{d}/passed/",
        zip,
        species=SPECIES,
        u=[PARAMS[s]['unknowns'] for s in SPECIES],
        c=[PARAMS[s]['contigs'] for s in SPECIES],
        a=[PARAMS[s]['assembly_size'] for s in SPECIES],
        d=[PARAMS[s]['distance'] for s in SPECIES])


rule all:
    input: directory(get_output)


rule curate:
    input: directory("genomes/{species}")
    output: directory("genomes/{species}/qc/{u}-{c}-{a}-{d}/passed/")
    threads: 8
    params:
        u = lambda wildcards: PARAMS[wildcards.species]['unknowns'],
        c = lambda wildcards: PARAMS[wildcards.species]['contigs'],
        a = lambda wildcards: PARAMS[wildcards.species]['assembly_size'],
        d = lambda wildcards: PARAMS[wildcards.species]['distance']
    message: """
    Executing genbankqc with {threads} threads on {wildcards.species},
    Logging to logs/{wildcards.species}_curate.log"""
    shell:
        "genbankqc species {input} -n {params.u} "
        "-c {params.c} -s {params.a} -d {params.d} "
        "--processes {threads} > logs/{wildcards.species}_curate.log 2>&1"
