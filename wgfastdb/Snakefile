import os
import glob
import json
# change to output dir
os.chdir(config['path'])
# add subdirs
os.makedirs("./genomes", exist_ok=True)
os.makedirs("./wgfast", exist_ok=True)

PARAMS = json.loads(config['params'])
SPECIES = list(PARAMS.keys())

def curate_dir(wildcards):
    return "genomes/{0}/qc/{1}/passed/".format(
        wildcards.species,
        PARAMS[wildcards.species])

def get_params(wildcards, param):
    return PARAMS[wildcards.species][param]

rule all:
    input: 
        expand(
            ["wgfast/{species}/best_snp.tsv",
            "wgfast/{species}/reference.fasta",
            "wgfast/{species}/nasp_raxml.tree",
            "wgfast/{species}/nasp.PARAMS"],
            species=SPECIES)

rule wgfastdb:
    input: curate_dir
    threads: config['threads']
    log: "logs/{species}.log"
    params: 
        d="genomes/{species}",
        # r=lambda wildcards: glob.glob(
        #     "genomes/{0}/{1}*.fasta".format(
        #         wildcards.species,
        #         PARAMS[wildcards.species]['reference']))[0],
        w="wgfast"
    output: 
        "wgfast/{species}/best_snp.tsv",
        "wgfast/{species}/reference.fasta",
        "wgfast/{species}/nasp_raxml.tree",
        "wgfast/{species}/nasp.PARAMS"
    script: config['script']


rule curate:
    input: dynamic("genomes/{species}/{fastas}.fasta")
    output: 
        directory("genomes/{species}/qc/{u}-{c}-{a}-{d}/passed/")
    shell:
        "genbankqc species ./genomes/{wildcards.species} -n {wildcards.u} "
        "-c {wildcards.c} -s {wildcards.a} -d {wildcards.d}"

rule download:
    output: 
        directory("genomes/{species}/{fastas}.fasta")
    params:
        update=config['update'],
        update_assembly=config['update_assembly']
    shell:
        "ncbitk species {params.update} {params.update_assembly} genomes {wildcards.species}"


